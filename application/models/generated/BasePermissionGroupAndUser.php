<?php

/**
 * BasePermissionGroupAndUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property timestamp $assigned_date
 * @property integer $assignee_user_id
 * @property integer $user_id
 * @property integer $permissiongroup_id
 * @property User $Assignee
 * @property User $User
 * @property PermissionGroup $PermissionGroup
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6508 2009-10-14 06:28:49Z jwage $
 */
abstract class BasePermissionGroupAndUser extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('permission_group_and_user');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('assigned_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('assignee_user_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('permissiongroup_id', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'unsigned' => true,
             'length' => '2',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User as Assignee', array(
             'local' => 'assignee_user_id',
             'foreign' => 'id'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('PermissionGroup', array(
             'local' => 'permissiongroup_id',
             'foreign' => 'id'));
    }
}