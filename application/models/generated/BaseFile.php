<?php

/**
 * BaseFile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $code
 * @property string $name
 * @property string $path
 * @property integer $size
 * @property enum $type
 * @property string $mimetype
 * @property integer $width
 * @property integer $height
 * @property Doctrine_Collection $Content
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6508 2009-10-14 06:28:49Z jwage $
 */
abstract class BaseFile extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('file');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('code', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'notblank' => true,
             'length' => '255',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notblank' => true,
             'length' => '255',
             ));
        $this->hasColumn('path', 'string', 255, array(
             'type' => 'string',
             'notblank' => true,
             'length' => '255',
             ));
        $this->hasColumn('size', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'file',
              1 => 'document',
              2 => 'image',
              3 => 'video',
              4 => 'audio',
              5 => 'web',
              6 => 'application',
              7 => 'archive',
             ),
             'default' => 'unknown',
             'notnull' => true,
             ));
        $this->hasColumn('mimetype', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '20',
             ));
        $this->hasColumn('width', 'integer', 2, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '2',
             ));
        $this->hasColumn('height', 'integer', 2, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '2',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Content', array(
             'local' => 'id',
             'foreign' => 'avatar_id'));

        $balauditable0 = new BalAuditable(array(
             'status' => 
             array(
              'disabled' => true,
             ),
             'enabled' => 
             array(
              'disabled' => true,
             ),
             'author' => 
             array(
              'disabled' => false,
             ),
             'created_at' => 
             array(
              'disabled' => false,
             ),
             'updated_at' => 
             array(
              'disabled' => false,
             ),
             'published_at' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($balauditable0);
    }
}