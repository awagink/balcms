<?php

/**
 * Base_Bal_InvoiceItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property string $template
 * @property int $quantity
 * @property decimal $payment_fee
 * @property enum $weight_unit
 * @property decimal $price_each
 * @property decimal $price_each_d
 * @property decimal $price_all_total
 * @property decimal $price_all_total_d
 * @property decimal $price_all_total_dhs
 * @property decimal $price_total
 * @property decimal $handling_each
 * @property decimal $handling_all_total
 * @property decimal $tax_each
 * @property decimal $tax_each_rate
 * @property decimal $tax_each_total
 * @property decimal $tax_all_total
 * @property decimal $weight_each
 * @property decimal $weight_all_total
 * @property decimal $discount_each
 * @property decimal $discount_each_rate
 * @property decimal $discount_each_total
 * @property decimal $discount_all_total
 * @property decimal $shipping_first
 * @property decimal $shipping_additional
 * @property decimal $shipping_all_total
 * @property integer $Invoice_id
 * @property Invoice $Invoice
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Base_Bal_InvoiceItem extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('bal__invoice_item');
        $this->hasColumn('id', 'integer', 2, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => '2',
             ));
        $this->hasColumn('title', 'string', 50, array(
             'type' => 'string',
             'notblank' => true,
             'length' => '50',
             ));
        $this->hasColumn('template', 'string', 50, array(
             'type' => 'string',
             'notblank' => true,
             'default' => 'user_invoiceitem',
             'extra' => 
             array(
              'auto' => true,
             ),
             'length' => '50',
             ));
        $this->hasColumn('quantity', 'int', 2, array(
             'type' => 'int',
             'notblank' => true,
             'length' => '2',
             ));
        $this->hasColumn('payment_fee', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'default' => 0,
             'extra' => 
             array(
              'currency' => true,
             ),
             'length' => '8',
             ));
        $this->hasColumn('weight_unit', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'kgs',
              1 => 'lbs',
             ),
             'default' => 'kgs',
             'notblank' => true,
             ));
        $this->hasColumn('price_each', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'extra' => 
             array(
              'currency' => true,
             ),
             'length' => '8',
             ));
        $this->hasColumn('price_each_d', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'extra' => 
             array(
              'currency' => true,
             ),
             'length' => '8',
             ));
        $this->hasColumn('price_all_total', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'extra' => 
             array(
              'currency' => true,
             ),
             'length' => '8',
             ));
        $this->hasColumn('price_all_total_d', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'extra' => 
             array(
              'currency' => true,
             ),
             'length' => '8',
             ));
        $this->hasColumn('price_all_total_dhs', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'extra' => 
             array(
              'currency' => true,
             ),
             'length' => '8',
             ));
        $this->hasColumn('price_total', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'extra' => 
             array(
              'currency' => true,
             ),
             'length' => '8',
             ));
        $this->hasColumn('handling_each', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'default' => 0,
             'extra' => 
             array(
              'currency' => true,
             ),
             'length' => '8',
             ));
        $this->hasColumn('handling_all_total', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'extra' => 
             array(
              'currency' => true,
             ),
             'length' => '8',
             ));
        $this->hasColumn('tax_each', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'default' => 0,
             'extra' => 
             array(
              'currency' => true,
             ),
             'length' => '8',
             ));
        $this->hasColumn('tax_each_rate', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'default' => 0,
             'extra' => 
             array(
              'percentage' => true,
             ),
             'length' => '8',
             ));
        $this->hasColumn('tax_each_total', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'extra' => 
             array(
              'currency' => true,
             ),
             'length' => '8',
             ));
        $this->hasColumn('tax_all_total', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'extra' => 
             array(
              'currency' => true,
             ),
             'length' => '8',
             ));
        $this->hasColumn('weight_each', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'default' => 0,
             'length' => '8',
             ));
        $this->hasColumn('weight_all_total', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'length' => '8',
             ));
        $this->hasColumn('discount_each', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'default' => 0,
             'extra' => 
             array(
              'currency' => true,
             ),
             'length' => '8',
             ));
        $this->hasColumn('discount_each_rate', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'default' => 0,
             'extra' => 
             array(
              'percentage' => true,
             ),
             'length' => '8',
             ));
        $this->hasColumn('discount_each_total', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'extra' => 
             array(
              'currency' => true,
             ),
             'length' => '8',
             ));
        $this->hasColumn('discount_all_total', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'extra' => 
             array(
              'currency' => true,
             ),
             'length' => '8',
             ));
        $this->hasColumn('shipping_first', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'default' => 0,
             'extra' => 
             array(
              'percentage' => true,
             ),
             'length' => '8',
             ));
        $this->hasColumn('shipping_additional', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'extra' => 
             array(
              'currency' => true,
             ),
             'length' => '8',
             ));
        $this->hasColumn('shipping_all_total', 'decimal', 8, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'extra' => 
             array(
              'currency' => true,
             ),
             'length' => '8',
             ));
        $this->hasColumn('Invoice_id', 'integer', 2, array(
             'type' => 'integer',
             'unsigned' => true,
             'notblank' => true,
             'length' => '2',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Invoice', array(
             'local' => 'Invoice_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}